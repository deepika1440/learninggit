<sly data-sly-use.headingGroup="com.baml.aem.unity.core.models.HeadingGroup" />

<!-- Optional debug -->
<!-- <p>Variation: ${headingGroup.variationCard}</p> -->

<div class="uc uc-heading ${headingGroup.customClassOverride} ${headingGroup.topMargin}"
     id="${headingGroup.componentId}"
     data-tracking-name="HeadingGroup"
     path="${headingGroup.xfPath}">

    <!-- Default Variation: Render heading only if variation is NOT creditCard -->
    <sly data-sly-test="${headingGroup.variationCard != 'creditCard'}">
        <sly data-sly-test="${!headingGroup.combineLeadInHeadline}"
             data-sly-call="${headingSeparate @ values=headingGroup}" />

        <sly data-sly-test="${headingGroup.combineLeadInHeadline}"
             data-sly-call="${headingCombined @ values=headingGroup}" />
    </sly>

    <!-- CreditCard Variation: Render content from XF fields -->
    <sly data-sly-test="${headingGroup.variationCard == 'creditCard'}">
        <div class="uc-heading">
            <span data-sly-test="${headingGroup.leadIn}"
                  class="uc-heading preheadline uc-copy--lead-in"
                  data-sly-element="span">
                ${headingGroup.leadIn}
            </span>

            <h1 data-sly-test="${headingGroup.title}" class="uc-heading headline">
                ${headingGroup.title}
            </h1>

            <span data-sly-test="${headingGroup.xfPath}"
                  class="uc-heading headline uc-copy--xfpath"
                  data-sly-element="span">
                ${headingGroup.xfPath}
            </span>
        </div>
    </sly>

</div>

<!-- Templates -->

<template data-sly-template.headingSeparate="${@ values}">
    <span data-sly-test="${values.leadinText}"
          class="uc-heading preheadline uc-copy--lead-in ${values.leadinColor}"
          data-sly-element="${values.leadInValue}">
        ${values.leadinText}
    </span>

    <h1 data-sly-test="${values.headlineText}"
        class="uc-heading headline"
        data-sly-element="${values.headlineValue}">
        ${values.headlineText}
    </h1>
</template>

<template data-sly-template.headingCombined="${@ values}">
    <h1 data-sly-test="${values.headlineText}" class="uc-heading headline" data-sly-element="${values.headlineValue}">
        <span data-sly-test="${values.leadinText}"
              class="uc-heading preheadline uc-copy--lead-in ${values.leadinColor}">
            ${values.leadinText}
        </span>
        ${values.headlineText}
    </h1>
</template>
